name: CI

on: 
  push:
    branches:
      - '*' 
  pull_request:
    branches:
      - main

jobs:
  TestBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
      - name: Install packages
        run: |
          cd services/backend/
          ~/.poetry/bin/poetry install
      - name: Run test
        run: |
          cd services/backend/
          ~/.poetry/bin/poetry run pytest
  
  TestIntegration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Start dockers
        run: docker-compose up -d
      - name: Test backend running
        run: curl localhost:5000
      - name: Test frontend running
        run: curl localhost:8080
      - name: Test DB running
        env: 
          DOCKER_CONTAINER_NAME: "postgres"
        run: timeout 90s bash -c "until docker exec $DOCKER_CONTAINER_NAME pg_isready ; do sleep 5 ; done"
    # test redis and celery running
  
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache node 
        id: cache-node
        if: always()
        uses: actions/cache@v2
        with:
          path: |node_modules
            ~/PZSP2/PZSP2/services/frontend/node_modules
            ~/.npm
          key: ${{ runner.os }}-node3-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node3
      - name: Install node node_modules
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: |
          cd services/frontend
          npm install
      - name: Run JS Lint
        if: always()
        run: |
          cd services/frontend
          npm run lint
      - name: lint backend
        uses: psf/black@stable
        if: always()
        with:
          options: "--check --verbose --diff"
          src: "./services/backend/src"
      - name: lint celery
        uses: psf/black@stable
        if: always()
        with:
          options: "--check --verbose --diff"
          src: "./services/celery/src"
      